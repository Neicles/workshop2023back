package com.example.workplace2023Backend.contoller;
import com.example.workplace2023Backend.Class.utilisateurRepository;
import com.example.workplace2023Backend.Class.Utilisateur;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private utilisateurRepository utilisateurRepository;

    @Autowired
    private AuthService authService;


    @PostMapping("/connexion")
    public ResponseEntity<Utilisateur> connexion() {
        String email = "admin@gmail.com";
        String motDePasse = "onx7ud";
        Utilisateur utilisateur = authService.verifierEmailEtMotDePasse(email, motDePasse);
        if (utilisateur != null) {
            // L'authentification est réussie, redirigez vers une page de succès.
            return ResponseEntity.ok(utilisateur);
        } else {
            // L'authentification a échoué, redirigez vers une page d'erreur.
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null);
        }
    }



    @GetMapping(path="/all")
    public @ResponseBody Iterable<Utilisateur> getAllUsers() {
        // This returns a JSON or XML with the users
        return utilisateurRepository.findAll();
    }
}